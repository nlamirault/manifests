# Copyright (C) 2016, 2019 Nicolas Lamirault <nicolas.lamirault@gmail.com>

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cilium-node-init
  labels:
    app: cilium-node-init
spec:
  selector:
    matchLabels:
      app: cilium-node-init
  template:
    metadata:
      labels:
        app: cilium-node-init
    spec:
      tolerations:
      - operator: Exists
      hostPID: true
      hostNetwork: true
      containers:
        - name: node-init
          image: gcr.io/google-containers/startup-script:v1
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          env:
          # STARTUP_SCRIPT is the script run on node bootstrap. Node
          # bootstrapping can be customized in this script.
          - name: STARTUP_SCRIPT
            value: |
              #!/bin/bash

              set -o errexit
              set -o pipefail
              set -o nounset

              mount | grep "/sys/fs/bpf type bpf" || {
                # Mount the filesystem until next reboot
                echo "Mounting BPF filesystem..."
                mount bpffs /sys/fs/bpf -t bpf
              }

              echo "Installing BPF filesystem mount"
              cat >/tmp/sys-fs-bpf.mount <<EOF
              [Unit]
              Description=Mount BPF filesystem (Cilium)
              Documentation=http://docs.cilium.io/
              DefaultDependencies=no
              Before=local-fs.target umount.target
              After=swap.target

              [Mount]
              What=bpffs
              Where=/sys/fs/bpf
              Type=bpf

              [Install]
              WantedBy=multi-user.target
              EOF

              if [ -d "/etc/systemd/system/" ]; then
                mv /tmp/sys-fs-bpf.mount /etc/systemd/system/
                echo "Installed sys-fs-bpf.mount to /etc/systemd/system/"
              elif [ -d "/lib/systemd/system/" ]; then
                mv /tmp/sys-fs-bpf.mount /lib/systemd/system/
                echo "Installed sys-fs-bpf.mount to /lib/systemd/system/"
              fi

              # Ensure that filesystem gets mounted on next reboot
              systemctl enable sys-fs-bpf.mount
              systemctl start sys-fs-bpf.mount

              echo "Link information:"
              ip link

              echo "Routing table:"
              ip route

              echo "Addressing:"
              ip -4 a
              ip -6 a
              if ip link show cbr0; then
                echo "Detected cbr0 bridge. Deleting interface..."
                ip link del cbr0
              fi
              # GKE: Alter the kubelet configuration to run in CNI mode
              echo "Changing kubelet configuration to --network-plugin=cni --cni-bin-dir=/home/kubernetes/bin"
              mkdir -p /home/kubernetes/bin
              sed -i "s:--network-plugin=kubenet:--network-plugin=cni\ --cni-bin-dir=/home/kubernetes/bin:g" /etc/default/kubelet
              echo "Restarting kubelet..."
              systemctl restart kubelet
              date > /tmp/cilium-bootstrap-time
              echo "Node initialization complete"